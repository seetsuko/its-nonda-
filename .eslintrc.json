{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
      "eslint:recommended",
        "next/core-web-vitals",
        "plugin:react/recommended",
        "airbnb",
        "airbnb-typescript",
        "prettier"
    ],
    "parser": "@typescript-eslint/parser",
    "overrides": [
    ],
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaFeatures": {
            "jsx": true
        },
    "ecmaVersion": "latest",
    "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "import"
    ],
    "rules": {
        "import/prefer-default-export": "off", // named exportがエラーになるので使えるようにoff
        "import/extensions": [ // importのときに以下の拡張子を記述しなくてもエラーにしない
          "error",
					{
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "scss": "never"
          }
        ],
        "react/function-component-definition": [ // アロー関数以外受け付けない設定
          2,
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/jsx-filename-extension": [ //jsx形式のファイル拡張子をjsxもしくはtsxに限定
          "error",
          {
            "extensions": [".jsx", ".tsx"]
          }
        ],
        "import/order":  [
          "error",
          {
            // グループごとの並び順
            "groups": [
              "builtin",  // 1. fsや path などの node "builtin" のモジュール
              "external",  // 2. npm install したパッケージ
              "internal", // 3. webpack などでパス設定したモジュール
              ["parent", "sibling"], // 4. 親階層と小階層のファイル
              "object",  // object"-imports
              "type",  // 型だけをインポートする type imports
              "index" // 同階層のファイル
            ],
            // グループごとに改行を入れる
            "newlines-between": "never", // "never" を指定すると改行なし
            // FIXME: ちょっとよく分かってない
            // This defines import types that are not handled by configured pathGroups. This is mostly needed when you want to handle path groups that look like external imports.
            "pathGroupsExcludedImportTypes": ["builtin"],
            // アルファベット順・大文字小文字を区別しない
            "alphabetize": { "order": "asc", "caseInsensitive": true },
            // パターンマッチしたものをグループにする
            // "newlines-between": "always" の場合は pathGroups  ごとに空行が入る
            "pathGroups": [
              // react 関連を external より前にする
              // "pathGroupsExcludedImportTypes": ["react"], にしてみたが `react`, `react-dom` などが別グループになってしまったので pattern で無理やり同じグループにした
              {
                "pattern": "react**",
                "group": "external",
                "position": "before"
              },
              // `@/app`, `@/features/`, `@/libs` の import をひとグループにして internal の前に
              {
                "pattern": "{@/app/**,@/features/**,@/libs/**}",
                "group": "internal",
                "position": "before"
              },
              // `@/components`, `@/pages` の import をグルーピング
              {
                "pattern": "{@/components/**,@/pages/**}",
                "group": "internal",
                "position": "before"
              },
              // CSS module を一番最後に
              {
                "pattern": "./**.module.css",
                "group": "index",
                "position": "after"
              }
            ]
          }],
				"arrow-body-style": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "no-console": "off",
        "consistent-return":"off",
        "react/jsx-props-no-spreading": "off",
        "import/no-extraneous-dependencies": "off",
        "array-callback-return": "off",
        "no-param-reassign":"off",
        "no-new":"off",
        "no-alert":"off",
        "no-empty":"off",
        "prefer-destructuring":"off",
        "react/jsx-no-constructed-context-values":"off",
        "import/no-cycle":"off",
        "object-shorthand":"off",
        "@typescript-eslint/no-unused-expressions":"off",
        "react/no-array-index-key":"off",
        "import/no-self-import":"off",
        "no-restricted-globals":"off",
        "react/jsx-curly-brace-presence":"off",
        "jsx-a11y/anchor-is-valid":"off",
        "react/react-in-jsx-scope":"off",
        "react/jsx-no-useless-fragment":"off",
        "react-hooks/exhaustive-deps":"off"
      },
      "settings": {
        "import/resolver": { //importするファイルをjsだけではなく、tsを含むファイルを許可する
          "node": {
            "paths": ["src"],
            "extensions": [".js", ".jsx", ".ts", ".tsx"]
          }
        }
      }
    }